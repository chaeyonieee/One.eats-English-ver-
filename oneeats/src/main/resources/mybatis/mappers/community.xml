<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.community.dao.CommunityDAO">

	<resultMap id="recipeResult" type="recipeVO">
		<result property="recipeNo" column="recipeNo" />
		<result column="title" property="title" />
		<result column="cooking_time" property="cooking_time" />
		<result column="description" property="description" />
		<result column="cookingImg" property="cookingImg" />
		<result column="category" property="category" />
		<result column="inbun" property="inbun" />
		<result column="creDate" property="creDate"
			javaType="java.sql.Date" />
		<result column="memberNo" property="memberNo" />
	</resultMap>

	<resultMap id="ingredientResult" type="ingredientVO">
		<result property="recipeNo" column="recipeNo" />
		<result property="name" column="name" />
		<result property="qty" column="qty" />
	</resultMap>

	<resultMap id="noticeResult" type="noticeVO">
		<result property="noticeNo" column="noticeNo" />
		<result property="category" column="category" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="creDate" column="creDate" />
	</resultMap>

	<resultMap id="oneQnAResult" type="oneQnAVO">
		<result property="qnaNo" column="qnaNo" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="creDate" column="creDate" />
		<result property="status" column="status" />
		<result property="parentNo" column="parentNo" />
		<result property="memberNo" column="memberNo" />
		<result property="memberName" column="memberName" />
		<result property="profile" column="profile" />
		<result property="level" column="level" />
	</resultMap>

	<resultMap id="mostQnAResult" type="mostQnAVO">
		<result property="qnaNo" column="qnaNo" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="creDate" column="creDate" />
		<result property="category" column="category" />
	</resultMap>

	<select id="newQnANo" resultType="int">
		select ifnull(max(qnaNo),0)+1
		from oneqna
	</select>

	<insert id="replyInsert" parameterType="oneQnAVO">
		insert into oneqna(qnaNo,
		content, parentNo, memberNo )
		values (#{qnaNo}, #{content},
		#{parentNo}, #{memberNo})
	</insert>

	<select id="oneQnAList" resultMap="oneQnAResult">
		select * from oneqna where
		parentNo=0 order by creDate desc
	</select>

	<insert id="oneQnAFormInsert" parameterType="OneQnAVO">
		insert oneqna
		(qnaNo,title, content, parentNo, memberNo)
		values(#{qnaNo},#{title},#{content},#{parentNo},#{memberNo})
	</insert>
	
	<update id="updateQnAStatusDone" parameterType="int">
		update oneqna
		set status='답변 Complete'
		where qnaNo=#{parentNo}
	</update>

	
	<select id="selectMemberByMemberNo" resultType="MemberVO">
		<![CDATA[
			select * from member where memberNo=#{memberNo}
		]]>
	</select>
	
	<select id="oneQnAList_reply" resultMap="oneQnAResult">
		select * from oneqna
	</select>

	<select id="oneQnADetail" resultType="oneQnAVO"
		parameterType="int">
		select * from oneqna
		where qnaNo=#{qnaNo}

	</select>

	<select id="replyList" resultType="oneQnAVO" parameterType="int">
		select t.*,m.name as memberName, m.profileImg as profile, m.id as id
		from (
		select @row_num :=@row_num+1 as rowNum, tt.* from (SELECT brd.*, fnc.level
		as level
		FROM
		(SELECT function_hierarchical() AS qnaNo, @level AS level
		FROM (SELECT @start_with:=#{qnaNo}, @qnaNo:=@start_with, @level:=0) as vars
		JOIN oneQnA
		WHERE @qnaNo IS NOT NULL) as fnc
		JOIN oneQnA brd ON fnc.qnaNo = brd.qnaNo) tt, (select @row_num:=0) as var2
		) t
		inner join member m
		on t.memberNo=m.memberNo
		order by rowNum
	</select>

	<select id="sellectAllRecipe" resultMap="recipeResult">
	    <![CDATA[
			sellect * from recipe
		]]>
	</select>


	<select id="selectRecipeList" resultMap="recipeResult"
		parameterType="java.util.Map">
		select * from recipe
		where 1=1
		<choose>
			<when test="recipe_search_type==null or recipe_search_type==''">
				and 1=1
			</when>
			<when test="recipe_search_type=='all'">
				and title Like CONCAT('%', #{recipe_search_word},
				'%') or description like CONCAT('%', #{recipe_search_word}, '%')
			</when>
			<otherwise>
				<choose>
					<when test="recipe_search_type=='title'">
						and title like CONCAT('%', #{recipe_search_word},
						'%')
					</when>
					<when test="recipe_search_type=='description'">
						and description like CONCAT('%',
						#{recipe_search_word}, '%')
					</when>
				</choose>
			</otherwise>
		</choose>


		<if test="category!=null and category!=''">
			and category=#{category}
		</if>

		order by creDate desc
		limit #{start}, 6

	</select>


	<select id="selectNewRecipeList" resultMap="recipeResult">
		select * from recipe
		order by creDate desc limit 3
	</select>


	<select id="selectNewRecipeListExceptCurrentRecipe"
		resultMap="recipeResult" parameterType="int">
		select * from recipe where
		recipeNo!=#{recipeNo} order by creDate desc limit 3
	</select>


	<select id="selectRecipeByRecipeNo" resultType="recipeVO">
		select * from
		recipe where recipeNo=#{recipeNo}
	</select>


	<select id="selectIngredientByRecipeNo"
		resultMap="ingredientResult" parameterType="int">
		select * from ingredient
		where recipeNo=#{recipeNo}
	</select>


	<select id="selectNewRecipeNo" resultType="int">
		select
		ifnull(max(recipeNo),0)+1 from recipe
	</select>

	<select id="selectRecipeTotCount" resultType="int">
		select count(*)
		from recipe
	</select>

	<select id="selectRecipeCountWithCategory" resultType="int"
		parameterType="String">
		select count(*) from recipe where category=#{category}
	</select>

	<select id="noticeList" resultMap="noticeResult"
		parameterType="String">
		select * from notice
	</select>

	<select id="noticeDetail" resultMap="noticeResult"
		parameterType="int">
		select * from notice where noticeNo=#{noticeNo}
	</select>

	<insert id="insertNewRecipe" parameterType="recipeVO">
		insert recipe
		(recipeNo,title,cooking_time,description,cookingImg,category,inbun,memberNo)
		values(#{recipeNo},#{title},#{cooking_time},#{description},#{cookingImg},#{category},#{inbun},#{memberNo})
	</insert>

	<insert id="insertNewRecipeWithMap"
		parameterType="java.util.Map">
		insert recipe
		(recipeNo,title,cooking_time,description,cookingImg,category,inbun,memberNo)
		values(#{recipeNo},#{title},#{cooking_time},#{description},#{cookingImg},#{category},#{inbun},#{memberNo})
	</insert>

	<insert id="insertIngredients" parameterType="java.util.List">
		insert into ingredient (recipeNo,name,qty)
		values
		<foreach collection="list" item="i" index="index"
			separator=",">
			(#{i.recipeNo}, #{i.name}, #{i.qty})
		</foreach>
	</insert>

	<insert id="insertIngredientsWithMap"
		parameterType="java.util.Map">
		insert into ingredient (recipeNo,name,qty)
		values
		<foreach collection="#{ingredientList}" item="i" index="index"
			separator=",">
			(#{i.recipeNo}, #{i.name}, #{i.qty})
		</foreach>
	</insert>

	<update id="updateRecipe" parameterType="java.util.Map">
		update recipe set title
		= #{title},
		cooking_time = #{cooking_time},
		description =
		#{description},
		cookingImg = #{cookingImg},
		category = #{category},
		inbun = #{inbun}
		where recipeNo = #{recipeNo}
	</update>


	<delete id="deleteIngredientsByRecipeNo" parameterType="int">
		delete
		from ingredient where recipeNo = #{recipeNo}
	</delete>

	<delete id="deleteRecipe" parameterType="int">
		delete from recipe where
		recipeNo = #{recipeNo}
	</delete>

	<select id="countRecipeNums" resultType="java.util.Map">
		select * from (
		select
		count(*) as cnt, concat('Total') as category from recipe
		union (select
		count(*) as cnt, category from recipe group by category order
		by cnt
		desc limit 10)) as t
		where category!='' and category!='none'
	</select>

	<select id="selectMostQnAListWithPagingMap"
		parameterType="java.util.Map" resultMap="mostQnAResult">
		select * from mostQnA
		<if test="category!='all'">
			where category=#{category}
		</if>
		order by creDate
		limit #{start},10
	</select>

	<select id="selectNoticeListWithPagingMap"
		parameterType="java.util.Map" resultMap="noticeResult">
		select * from notice
		<if test="category!='all'">
			where category=#{category}
		</if>
		order by creDate desc
		limit #{start},10
	</select>
	
	<select id="selectNoticeListTotalNumWithCategory"
		parameterType="java.util.Map" resultType="int">
		select count(noticeNo) from notice 
		<if test="category!='all'">
			where category=#{category}
		</if>
	</select>
	
	<select id="selectOneQnAListWithPagingMap"
		parameterType="java.util.Map" resultMap="oneQnAResult">
		select oneqna.*, member.id
		from oneqna
		inner join member on oneqna.memberNo=member.memberNo 
		where parentNo=0 and oneqna.memberNo=#{memberNo}
		order by creDate limit #{start},10
	</select>

	<select id="selectMostQnAListTotalNumWithCategory"
		parameterType="String" resultType="int">
		select count(qnaNo) from mostQnA
		<if test="category!='all'">
			where category=#{category}
		</if>
	</select>


	<select id="selectOneQnAListTotalNumWithPagingMap">
		select count(qnaNo) from oneQnA
		where  parentNo=0 and memberNo=#{memberNo}
	</select>


</mapper>
